# iOS CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/ios-migrating-from-1-2/ for more details
#
version: 2
jobs:
  lint:
    docker:
      - image: dantoml/swiftlint:latest
    steps:
      - checkout
      - run: swiftlint lint --reporter junit | tee result.xml
      - store_artifacts:
          path: result.xml
      - store_test_results:
          path: result.xml
          # steps:
          #- ch# stepeckout
          #- re#- ch# stepstore_cache:
          #- ch# stepkeys:
          #- ch# step  - v{{ .Environment.CACHE_VERSION }}-gems-{{ checksum "Gemfile.lock" }}
          #- ru#- ch# stepn:
          #- ch# stepname: Bundle install
          #- ch# stepcommand: bundle check --path vendor/bundle || bundle install --path vendor/bundle
          #- sa#- ch# stepve_cache:
          #- ch# stepkey: v{{ .Environment.CACHE_VERSION }}-gems-{{ checksum "Gemfile.lock" }}
          #- ch# steppaths:
          #- ch# step  - vendor/bundle
          #- re#- ch# stepstore_cache:
          #- ch# stepkeys:
          #- ch# step  - v{{ .Environment.CACHE_VERSION }}-brew-{{ checksum "Brewfile" }}
          #- ru#- ch# stepn:
          #- ch# stepname: Brew install
          #- ch# stepcommand: brew bundle check --no-upgrade --verbose || bundle exec brew bundle install
          #- sa#- ch# stepve_cache:
          #- ch# stepkey: v{{ .Environment.CACHE_VERSION }}-brew-{{ checksum "Brewfile" }}
          #- ch# steppaths:
          #- ch# step  - /usr/local/Homebrew
          #- ru#- ch# stepn:
          #- ch# stepname: Decode certficates
          #- ch# stepcommand: base64 -D -o $CERTIFICATE_PATH <<< $CERTIFICATE
          #- ru#- ch# stepn:
          #- ch# stepname: Swiftlint
          #- ch# stepcommand: make lint
          #- st#- ch# stepore_test_results:
          #- ch# steppath: "lint"
          #- st#- ch# stepore_artifacts:
          #- ch# steppath: "lint"
  test:
    macos:
      xcode: "10.1.0"
    environment:
      BREW_PATH: /usr/local/Homebrew
      BUNDLE_PATH: vendor/bundle
    steps:
      - checkout
      - restore_cache:
          key: v{{ .Environment.CACHE_VERSION }}-gems-{{ checksum "Gemfile.lock" }}
      - run:
          name: Bundle install
          command: bundle check --path vendor/bundle || bundle install --path vendor/bundle
      - save_cache:
          key: v{{ .Environment.CACHE_VERSION }}-gems-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
      - run:
          name: Decode certficates
          command: base64 -D -o $CERTIFICATE_PATH <<< $CERTIFICATE
      - run:
          name: Install dependencies
          command: carthage bootstrap --platform macos
      - run:
          name: Run tests
          command: make test
      - store_test_results:
          path: "./test_output"
      - store_artifacts:
          path: "./test_output"

workflows:
  version: 2
  build:
    jobs:
      - lint
      - test
