# iOS CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/ios-migrating-from-1-2/ for more details
#
version: 2
jobs:
  lint:
    macos:
      xcode: "10.1.0"
    environment:
      BREW_PATH: /usr/local/Homebrew
      BUNDLE_PATH: vendor/bundle
    steps:
      - checkout
      - restore_cache:
          keys:
            - v{{ .Environment.CACHE_VERSION }}-gems-{{ checksum "Gemfile.lock" }}
      - run:
          name: Bundle install
          command: bundle check --path \{{ .Environment.BUNDLE_PATH }} || bundle install --path \{{ .Environment.BUNDLE_PATH }}
      - save_cache:
          key: v{{ .Environment.CACHE_VERSION }}-gems-{{ checksum "Gemfile.lock" }}
          paths:
            - \{{ .Environment.BUNDLE_PATH }}
      - restore_cache:
          keys:
            - v{{ .Environment.CACHE_VERSION }}-brew-{{ checksum "Brewfile" }}
      - run:
          name: Brew install
          command: brew bundle check || bundle exec brew bundle install
      - save_cache:
          key: v{{ .Environment.CACHE_VERSION }}-brew-{{ checksum "Brewfile" }}
          paths:
            - \{{ .Environment.BREW_PATH }}
      - run:
          name: Decode certficates
          command: base64 -D -o $CERTIFICATE_PATH <<< $CERTIFICATE
      - run:
          name: Swiftlint
          command: make lint
      - store_test_results:
          path: "lint"
      - store_artifacts:
          path: "lint"
  test:
    macos:
      xcode: "10.1.0"
    environment:
      BREW_PATH: /usr/local/Homebrew
      BUNDLE_PATH: vendor/bundle
    steps:
      - checkout
      - restore_cache:
          key: v{{ .Environment.CACHE_VERSION }}-gems-{{ checksum "Gemfile.lock" }}
      - run:
          name: Bundle install
          command: bundle check --path $BUNDLE_PATH || bundle install --path $BUNDLE_PATH
      - save_cache:
          key: v{{ .Environment.CACHE_VERSION }}-gems-{{ checksum "Gemfile.lock" }}
          paths:
            - $BUNDLE_PATH
      - run:
          name: Decode certficates
          command: base64 -D -o $CERTIFICATE_PATH <<< $CERTIFICATE
      - run:
          name: Install dependencies
          command: carthage bootstrap --platform macos
      - run:
          name: Run tests
          command: make test
      - store_test_results:
          path: "./test_output"
      - store_artifacts:
          path: "./test_output"

workflows:
  version: 2
  build:
    jobs:
      - lint
      - test
